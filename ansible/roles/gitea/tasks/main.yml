- name: Install of Gitea
  block:
    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - python3
        - python3-pip
        - python3-venv
        - python3-dev
        - python3-setuptools
        - python3-wheel
        - python3-apt
        - python3-docker
        - docker.io
        - pipx
    - name: Update system
      become: true
      apt:
        update_cache: yes
    - name: Change the hostname
      hostname:
        name: "{{ external_host }}"
      become: true
      become_user: root
      become_method: sudo
      when: external_host is defined

    - name: Add local DNS resolution for {{ external_host }}
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: "127.0.0.1      localhost {{ external_host }}"
        owner: root
        group: root
        mode: "0644"

    - name: Copy docker-compose.yml
      copy:
        src: "{{ gitea_project_src }}/docker-compose.yml"
        dest: "~/docker-compose.yml"

    - name: Copy config app.ini
      copy:
        src: "{{ gitea_project_src }}/config"
        dest: "~/config"

    - name: Install Gitea with docker-compose
      community.docker.docker_compose_v2:
        project_src: "{{ gitea_project_dest }}"
        files:
          - docker-compose.yml
        project_name: "{{ gitea_project_name }}"
        state: present

    - name: Wait for Gitea to be up
      wait_for:
        host: "{{ external_host }}"
        port: 3000
        delay: 5
        timeout: 300
        state: started

    - name: Test Gitea
      uri:
        url: http://{{ external_host }}:3000
        method: GET
        status_code: 200
        body: "Gitea"
        validate_certs: no
      ignore_errors: true

    - name: Create Gitea admin user
      command: |
        docker exec -it gitea bash -c "gitea admin user create --username {{ gitea_user }} --password '{{ gitea_root_password }}' --email {{ gitea_user_email }} --admin --access-token"
      register: resulte

    - name: Extracte token from resulte
      set_fact:
        token: "{{ resulte.stdout | regex_search('Access token was successfully created... (\\w+)', '\\1') }}"

    - name: affiche la valeur de token
      debug:
        var: token

    # - name: Create Gitea user
    #   command: |
    #     docker exec -it gitea bash -c "gitea admin user create --username toto --password toto --email toto@localhost --access-token"
    #   register: token
